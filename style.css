body {
  color: red;
  background: wheat;
}

/* grid-template-columns: 40px 1fr 20%; — эта строка дает браузеру команду присвоить первому div ширину 40px,
второй же занимает одну долю отведенного места, а третий 20%. Элементы с 4 по 6 автоматически смещаются под первые 
3 и принимают те же значения в том же порядке, т.е. div 4 получает размер 40px, div 5 — одну долю, а div 6 – 20%.
Чтобы поместить все шесть div-элементов в одну строку нужно указать в свойстве grid-template-column шесть значений.
При этом не обязательно использовать для столбцов разные единицы измерения, можно задать только проценты, fr или px.
grid-template-rows: 200px; — эта строка присваивает всем div-элементам высоту в 200px.
 */
/* .container {
  display: grid;
  grid-template-columns: 40px 1fr 20%;
  grid-template-rows: 200px;
  background-color: beige;
}

.container > div {
  background-color: green;
  margin: 10px;
} */

/* Fr – это дробная единица, которая присваивает каждому элементу одну долю доступного пространства, которое можно
увеличивать, выделяя под div необходимую ему область. */
/* .container { */
/* display: grid; */
/* grid-template-columns: 1fr 2fr 1fr 2fr 1fr 1fr; */
/* grid-template-columns: repeat(6, 1fr); */
/* Gap – это отступ, представляющий свойство CSS сетки, которое позволяет указывать расстояние между div-элементами контейнера.
  Работает оно точно также, как свойство margin и измеряется обычно в px. */
/* gap: 10px; */
/* } */

/* Свойства grid-column-start и grid-column-end помещают элемент сетки в конкретное место столбца относительно определенных строк
сетки. Свойства же grid-row-start и grid-row-end делают то же самое, но в отношении строки. Присваивая этим свойствам значения,
можно удобно управлять начальной и конечной точкой элемента сетки, выделяя ему нужную область. */

/* Если вы присвоите указанные значения первому div, то заметите, что он смещает второй div на одну единицу и занимает первые две позиции,
смещая третий div вниз. В отношении же строк теперь он занимает три позиции и становится выше.
В программировании индексация производится по особому правилу, согласно которому мы обычно начинаем отсчет с 0. В этом случае последнее
значение, как правило, упоминается, но не учитывается. Например, значение свойства grid-column-end равно 3, но по факту оканчивается оно
на 2-х также, как и grid-row-end оканчивается на 3-х, а не на 4-х. */
.container {
  display: grid;
  grid-template-columns: repeat (3, 1fr);
  grid-template-rows: repeat(4, 200px);
}

#one {
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 4;
}

.container > div {
  background-color: green;
  margin: 10px;
}

#two {
}
#three {
}
#four {
}
#five {
}
#six {
}
